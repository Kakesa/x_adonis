@layout.app({ title: "Welcome !" })

@slot('meta')
<meta name="description" content="A welcome page made with EdgeJS">
<meta name="csrf-token" content="{{ csrfToken }}">
@endslot

@slot('main')
<body class="flex items-center justify-center min-h-screen bg-black px-4">
  <main class="max-w-4xl w-full flex flex-col md:flex-row gap-40 items-center justify-center py-10">

    <!-- Logo -->
    <div class="hidden md:flex flex-1 items-center justify-center">
      <img src="/resources/images/logo/logo.png" alt="Logo X" class="h-80 w-auto" />
    </div>

    <!-- Section Auth -->
    <section class="flex-1 max-w-md mx-auto space-y-6">

      <!-- Toast container -->
      <div id="toastContainer" class="fixed top-6 right-6 z-50 flex flex-col gap-2"></div>

      <h1 class="text-5xl font-extrabold text-white">Ça se passe maintenant</h1>
      <p class="font-semibold text-gray-300">Inscrivez-vous.</p>

      <!-- Auth buttons -->
      <button id="btnGoogle" class="w-full py-3 bg-white text-black rounded-full flex items-center justify-center gap-2 hover:bg-gray-200 transition">
        <img src="/resources/images/logo/google.png" alt="Google" class="w-6 h-6" />
        S’inscrire avec Google
      </button>

      <button id="btnApple" class="w-full py-3 bg-white text-black rounded-full flex items-center justify-center gap-2 hover:bg-gray-200 transition">
        <img src="/resources/images/logo/apple.png" alt="Apple" class="w-6 h-6" />
        S’inscrire avec Apple
      </button>

      <div class="relative text-center my-6 font-semibold text-gray-500">
        <span class="bg-black px-4 relative z-10">OU</span>
        <div class="border-t border-gray-700 absolute top-1/2 left-0 right-0 -translate-y-1/2"></div>
      </div>

      <button id="btnCreateAccount" class="w-full py-3 bg-[#1d9bf0] rounded-full hover:bg-[#1d9bf0] transition font-semibold">
        Créer un compte
      </button>

      <p class="text-center text-sm text-gray-400 mt-4">Vous avez déjà un compte ?</p>
      <button id="btnLogin" class="w-full border border-gray-600 text-[#1d9bf0] py-3 rounded-full hover:border-[#1d9bf0] hover:text-[#1d9bf0] transition font-semibold">
        Se connecter
      </button>
    </section>
  </main>

  {{-- Modale Auth --}}
  <div id="authModal" class="fixed inset-0 bg-black bg-opacity-90 backdrop-blur-sm flex items-center justify-center p-6 opacity-0 pointer-events-none transition-opacity z-60">
    <div class="bg-zinc-900 rounded-lg max-w-md w-full max-h-[90vh] flex flex-col overflow-hidden">
      <main class="modal-main p-6 overflow-y-auto flex-grow text-white text-left">
        
        {{-- Modal d’inscription --}}
        @include('auth/register')

        {{-- Modal de connexion --}}
        @include('auth/login')
        
      </main>
    </div>
  </div>

  <script>
  document.addEventListener("DOMContentLoaded", () => {
    const authModal = document.getElementById('authModal');
    const registerModal = document.getElementById('registerModal');
    const loginModal = document.getElementById('loginModal');
    const toastContainer = document.getElementById('toastContainer');

    const btnCreateAccount = document.getElementById('btnCreateAccount');
    const btnLogin = document.getElementById('btnLogin');

    const nextLoginStep = document.getElementById("nextLoginStep");
    const submitLogin = document.getElementById("submitLogin");

    const loginEmailInput = document.getElementById("loginEmail");
    const loginPasswordInput = document.getElementById("loginPassword");

    const csrfToken = document.querySelector('meta[name="csrf-token"]').content;

    // Fonction toast
    const showToast = (message, type = "success") => {
      const toast = document.createElement("div");
      toast.className = `px-4 py-2 rounded-lg text-white shadow-md transform transition-all ${type === "success" ? "bg-green-600" : "bg-red-600"}`;
      toast.textContent = message;
      toastContainer.appendChild(toast);
      setTimeout(() => toast.remove(), 5000);
    };

    // Flash messages Edge
    @if(flashMessages.has('success'))
      showToast('{{ flashMessages.get("success") }}', 'success');
    @endif
    @if(flashMessages.has('error'))
      showToast('{{ flashMessages.get("error") }}', 'error');
    @endif

    // Ouverture modales
    btnCreateAccount?.addEventListener('click', () => {
      authModal.classList.remove('opacity-0','pointer-events-none');
      registerModal.classList.remove('hidden');
      loginModal.classList.add('hidden');
    });

    btnLogin?.addEventListener('click', () => {
      authModal.classList.remove('opacity-0','pointer-events-none');
      loginModal.classList.remove('hidden');
      registerModal.classList.add('hidden');
    });

    // Étape 1 → Étape 2 login
    nextLoginStep?.addEventListener("click", () => {
      const email = loginEmailInput?.value.trim();
      if (!email) return showToast("Veuillez entrer votre email.", "error");
      
      loginEmailInput.disabled = true;
      nextLoginStep.disabled = true;
      loginPasswordInput.closest(".form-step")?.classList.remove("hidden");
    });

    // Soumission login fetch
    submitLogin?.addEventListener("click", async () => {
      const email = loginEmailInput?.value.trim();
      const password = loginPasswordInput?.value;

      if (!email || !password) return showToast("Veuillez remplir tous les champs.", "error");

      try {
        const res = await fetch("/auth/login", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
            "X-CSRF-TOKEN": csrfToken,
          },
          body: JSON.stringify({ email, password }),
        });

        const data = await res.json().catch(() => ({}));

        if (!res.ok) {
          showToast(data.message || "Erreur de connexion", "error");
          return;
        }

        showToast(data.message || "Bienvenue !", "success");
        setTimeout(() => {
          window.location.href = "/home";
        }, 1000);
      } catch (err) {
        console.error("Erreur login:", err);
        showToast("Erreur réseau, réessayez.", "error");
      }
    });
  });
  </script>

  <script src="/resources/js/app.js"></script>
</body>
@endslot
@end
